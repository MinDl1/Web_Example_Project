# docker-compose.yml

version: '3.8'

volumes:
  postgres_data:
  mongo_data:

services:
  api:
    container_name: backend_api
    build:
      context: .
      dockerfile: docker/backend/api/Dockerfile
    environment:
      - POSTGRES_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres_database:${POSTGRES_PORT}/${POSTGRES_DB}
      - MONGO_DATABASE_URL=mongodb://${MONGO_USER}:${MONGO_PASSWD}@mongo_database
      - MONGO_DATABASE_NAME=${MONGO_DATABASE_NAME}
      - SECRET_KEY=${SECRET_KEY}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - REFRESH_TOKEN_EXPIRE_DAYS=${REFRESH_TOKEN_EXPIRE_DAYS}
    ports:
      - "8001:8001"
    depends_on:
      mongo_database:
        condition: service_started
      postgres_database:
        condition: service_started
  postgres_database:
    container_name: backend_database
    build:
      context: .
      dockerfile: docker/backend/database/Dockerfile
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
  mongo_database:
    image: mongodb/mongodb-community-server:6.0-ubi8
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWD}
    volumes:
      - mongo_data:/data/db